--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV GX" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_tda
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1108w[2..0]	: WIRE;
	w_anode1122w[3..0]	: WIRE;
	w_anode1139w[3..0]	: WIRE;
	w_anode1149w[3..0]	: WIRE;
	w_anode1159w[3..0]	: WIRE;
	w_anode1169w[3..0]	: WIRE;
	w_anode1179w[3..0]	: WIRE;
	w_anode1189w[3..0]	: WIRE;
	w_anode1199w[3..0]	: WIRE;
	w_anode1211w[2..0]	: WIRE;
	w_anode1221w[3..0]	: WIRE;
	w_anode1232w[3..0]	: WIRE;
	w_anode1242w[3..0]	: WIRE;
	w_anode1252w[3..0]	: WIRE;
	w_anode1262w[3..0]	: WIRE;
	w_anode1272w[3..0]	: WIRE;
	w_anode1282w[3..0]	: WIRE;
	w_anode1292w[3..0]	: WIRE;
	w_anode1303w[2..0]	: WIRE;
	w_anode1313w[3..0]	: WIRE;
	w_anode1324w[3..0]	: WIRE;
	w_anode1334w[3..0]	: WIRE;
	w_anode1344w[3..0]	: WIRE;
	w_anode1354w[3..0]	: WIRE;
	w_anode1364w[3..0]	: WIRE;
	w_anode1374w[3..0]	: WIRE;
	w_anode1384w[3..0]	: WIRE;
	w_anode1395w[2..0]	: WIRE;
	w_anode1405w[3..0]	: WIRE;
	w_anode1416w[3..0]	: WIRE;
	w_anode1426w[3..0]	: WIRE;
	w_anode1436w[3..0]	: WIRE;
	w_anode1446w[3..0]	: WIRE;
	w_anode1456w[3..0]	: WIRE;
	w_anode1466w[3..0]	: WIRE;
	w_anode1476w[3..0]	: WIRE;
	w_data1106w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode1476w[3..3], w_anode1466w[3..3], w_anode1456w[3..3], w_anode1446w[3..3], w_anode1436w[3..3], w_anode1426w[3..3], w_anode1416w[3..3], w_anode1405w[3..3]), ( w_anode1384w[3..3], w_anode1374w[3..3], w_anode1364w[3..3], w_anode1354w[3..3], w_anode1344w[3..3], w_anode1334w[3..3], w_anode1324w[3..3], w_anode1313w[3..3]), ( w_anode1292w[3..3], w_anode1282w[3..3], w_anode1272w[3..3], w_anode1262w[3..3], w_anode1252w[3..3], w_anode1242w[3..3], w_anode1232w[3..3], w_anode1221w[3..3]), ( w_anode1199w[3..3], w_anode1189w[3..3], w_anode1179w[3..3], w_anode1169w[3..3], w_anode1159w[3..3], w_anode1149w[3..3], w_anode1139w[3..3], w_anode1122w[3..3]));
	w_anode1108w[] = ( (w_anode1108w[1..1] & (! data_wire[4..4])), (w_anode1108w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1122w[] = ( (w_anode1122w[2..2] & (! w_data1106w[2..2])), (w_anode1122w[1..1] & (! w_data1106w[1..1])), (w_anode1122w[0..0] & (! w_data1106w[0..0])), w_anode1108w[2..2]);
	w_anode1139w[] = ( (w_anode1139w[2..2] & (! w_data1106w[2..2])), (w_anode1139w[1..1] & (! w_data1106w[1..1])), (w_anode1139w[0..0] & w_data1106w[0..0]), w_anode1108w[2..2]);
	w_anode1149w[] = ( (w_anode1149w[2..2] & (! w_data1106w[2..2])), (w_anode1149w[1..1] & w_data1106w[1..1]), (w_anode1149w[0..0] & (! w_data1106w[0..0])), w_anode1108w[2..2]);
	w_anode1159w[] = ( (w_anode1159w[2..2] & (! w_data1106w[2..2])), (w_anode1159w[1..1] & w_data1106w[1..1]), (w_anode1159w[0..0] & w_data1106w[0..0]), w_anode1108w[2..2]);
	w_anode1169w[] = ( (w_anode1169w[2..2] & w_data1106w[2..2]), (w_anode1169w[1..1] & (! w_data1106w[1..1])), (w_anode1169w[0..0] & (! w_data1106w[0..0])), w_anode1108w[2..2]);
	w_anode1179w[] = ( (w_anode1179w[2..2] & w_data1106w[2..2]), (w_anode1179w[1..1] & (! w_data1106w[1..1])), (w_anode1179w[0..0] & w_data1106w[0..0]), w_anode1108w[2..2]);
	w_anode1189w[] = ( (w_anode1189w[2..2] & w_data1106w[2..2]), (w_anode1189w[1..1] & w_data1106w[1..1]), (w_anode1189w[0..0] & (! w_data1106w[0..0])), w_anode1108w[2..2]);
	w_anode1199w[] = ( (w_anode1199w[2..2] & w_data1106w[2..2]), (w_anode1199w[1..1] & w_data1106w[1..1]), (w_anode1199w[0..0] & w_data1106w[0..0]), w_anode1108w[2..2]);
	w_anode1211w[] = ( (w_anode1211w[1..1] & (! data_wire[4..4])), (w_anode1211w[0..0] & data_wire[3..3]), B"1");
	w_anode1221w[] = ( (w_anode1221w[2..2] & (! w_data1106w[2..2])), (w_anode1221w[1..1] & (! w_data1106w[1..1])), (w_anode1221w[0..0] & (! w_data1106w[0..0])), w_anode1211w[2..2]);
	w_anode1232w[] = ( (w_anode1232w[2..2] & (! w_data1106w[2..2])), (w_anode1232w[1..1] & (! w_data1106w[1..1])), (w_anode1232w[0..0] & w_data1106w[0..0]), w_anode1211w[2..2]);
	w_anode1242w[] = ( (w_anode1242w[2..2] & (! w_data1106w[2..2])), (w_anode1242w[1..1] & w_data1106w[1..1]), (w_anode1242w[0..0] & (! w_data1106w[0..0])), w_anode1211w[2..2]);
	w_anode1252w[] = ( (w_anode1252w[2..2] & (! w_data1106w[2..2])), (w_anode1252w[1..1] & w_data1106w[1..1]), (w_anode1252w[0..0] & w_data1106w[0..0]), w_anode1211w[2..2]);
	w_anode1262w[] = ( (w_anode1262w[2..2] & w_data1106w[2..2]), (w_anode1262w[1..1] & (! w_data1106w[1..1])), (w_anode1262w[0..0] & (! w_data1106w[0..0])), w_anode1211w[2..2]);
	w_anode1272w[] = ( (w_anode1272w[2..2] & w_data1106w[2..2]), (w_anode1272w[1..1] & (! w_data1106w[1..1])), (w_anode1272w[0..0] & w_data1106w[0..0]), w_anode1211w[2..2]);
	w_anode1282w[] = ( (w_anode1282w[2..2] & w_data1106w[2..2]), (w_anode1282w[1..1] & w_data1106w[1..1]), (w_anode1282w[0..0] & (! w_data1106w[0..0])), w_anode1211w[2..2]);
	w_anode1292w[] = ( (w_anode1292w[2..2] & w_data1106w[2..2]), (w_anode1292w[1..1] & w_data1106w[1..1]), (w_anode1292w[0..0] & w_data1106w[0..0]), w_anode1211w[2..2]);
	w_anode1303w[] = ( (w_anode1303w[1..1] & data_wire[4..4]), (w_anode1303w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1313w[] = ( (w_anode1313w[2..2] & (! w_data1106w[2..2])), (w_anode1313w[1..1] & (! w_data1106w[1..1])), (w_anode1313w[0..0] & (! w_data1106w[0..0])), w_anode1303w[2..2]);
	w_anode1324w[] = ( (w_anode1324w[2..2] & (! w_data1106w[2..2])), (w_anode1324w[1..1] & (! w_data1106w[1..1])), (w_anode1324w[0..0] & w_data1106w[0..0]), w_anode1303w[2..2]);
	w_anode1334w[] = ( (w_anode1334w[2..2] & (! w_data1106w[2..2])), (w_anode1334w[1..1] & w_data1106w[1..1]), (w_anode1334w[0..0] & (! w_data1106w[0..0])), w_anode1303w[2..2]);
	w_anode1344w[] = ( (w_anode1344w[2..2] & (! w_data1106w[2..2])), (w_anode1344w[1..1] & w_data1106w[1..1]), (w_anode1344w[0..0] & w_data1106w[0..0]), w_anode1303w[2..2]);
	w_anode1354w[] = ( (w_anode1354w[2..2] & w_data1106w[2..2]), (w_anode1354w[1..1] & (! w_data1106w[1..1])), (w_anode1354w[0..0] & (! w_data1106w[0..0])), w_anode1303w[2..2]);
	w_anode1364w[] = ( (w_anode1364w[2..2] & w_data1106w[2..2]), (w_anode1364w[1..1] & (! w_data1106w[1..1])), (w_anode1364w[0..0] & w_data1106w[0..0]), w_anode1303w[2..2]);
	w_anode1374w[] = ( (w_anode1374w[2..2] & w_data1106w[2..2]), (w_anode1374w[1..1] & w_data1106w[1..1]), (w_anode1374w[0..0] & (! w_data1106w[0..0])), w_anode1303w[2..2]);
	w_anode1384w[] = ( (w_anode1384w[2..2] & w_data1106w[2..2]), (w_anode1384w[1..1] & w_data1106w[1..1]), (w_anode1384w[0..0] & w_data1106w[0..0]), w_anode1303w[2..2]);
	w_anode1395w[] = ( (w_anode1395w[1..1] & data_wire[4..4]), (w_anode1395w[0..0] & data_wire[3..3]), B"1");
	w_anode1405w[] = ( (w_anode1405w[2..2] & (! w_data1106w[2..2])), (w_anode1405w[1..1] & (! w_data1106w[1..1])), (w_anode1405w[0..0] & (! w_data1106w[0..0])), w_anode1395w[2..2]);
	w_anode1416w[] = ( (w_anode1416w[2..2] & (! w_data1106w[2..2])), (w_anode1416w[1..1] & (! w_data1106w[1..1])), (w_anode1416w[0..0] & w_data1106w[0..0]), w_anode1395w[2..2]);
	w_anode1426w[] = ( (w_anode1426w[2..2] & (! w_data1106w[2..2])), (w_anode1426w[1..1] & w_data1106w[1..1]), (w_anode1426w[0..0] & (! w_data1106w[0..0])), w_anode1395w[2..2]);
	w_anode1436w[] = ( (w_anode1436w[2..2] & (! w_data1106w[2..2])), (w_anode1436w[1..1] & w_data1106w[1..1]), (w_anode1436w[0..0] & w_data1106w[0..0]), w_anode1395w[2..2]);
	w_anode1446w[] = ( (w_anode1446w[2..2] & w_data1106w[2..2]), (w_anode1446w[1..1] & (! w_data1106w[1..1])), (w_anode1446w[0..0] & (! w_data1106w[0..0])), w_anode1395w[2..2]);
	w_anode1456w[] = ( (w_anode1456w[2..2] & w_data1106w[2..2]), (w_anode1456w[1..1] & (! w_data1106w[1..1])), (w_anode1456w[0..0] & w_data1106w[0..0]), w_anode1395w[2..2]);
	w_anode1466w[] = ( (w_anode1466w[2..2] & w_data1106w[2..2]), (w_anode1466w[1..1] & w_data1106w[1..1]), (w_anode1466w[0..0] & (! w_data1106w[0..0])), w_anode1395w[2..2]);
	w_anode1476w[] = ( (w_anode1476w[2..2] & w_data1106w[2..2]), (w_anode1476w[1..1] & w_data1106w[1..1]), (w_anode1476w[0..0] & w_data1106w[0..0]), w_anode1395w[2..2]);
	w_data1106w[2..0] = data_wire[2..0];
END;
--VALID FILE
